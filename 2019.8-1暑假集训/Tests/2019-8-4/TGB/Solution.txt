shift

60%：模拟。时间复杂度O(n^2)。
100%：我们把一次操作定义为一段的头移到尾，那么总操作次数为n / 2 + n / 3 + ... + n / n <= nlogn。我们发现，对于某一段长k，第一段的头恰好移动到第二段的头，第二段的头恰好移动到第三段的头，依此类推，故每次操作时间复杂度O(1)。时间复杂度O(nlogn)。

card

小Y只有攻击型卡牌（共50%）：贪心策略一（不消耗对方的防御型卡牌），把小X的卡牌从大到小排序，小Y的攻击性卡牌从小到大排序，然后依次对应用到不能用为止。时间复杂度O(nlogn + mlogm)。
30%：DFS，搜索小X的每张卡牌的使用对象是小Y的哪张卡牌。时间复杂度O(n^m)。
100%：贪心策略二（消耗完对方的防御型卡牌），对于小Y的每张防御型卡牌，都选小X的比其力量值大的力量值最小的卡牌来消耗，接下来同贪心策略一。将贪心策略一、二结合即可。时间复杂度O(nlogn + mlogm)。

stage

30%：DFS，每秒只有用魔法或不用魔法两种可能。时间复杂度O(2^n)。
60%：DP，f[x][y][t]表示t时刻到位置(x, y)的最长滑行路程，决策只有t时刻使用或者没使用两种情况。时间复杂度O(nmt)。
100%：DP，f[x][y][k]表示第k段时间结束时到位置(x, y)的最长滑行路程，那么决策区间就是在该段时间对应的方向上在该位置之前长度为该段时间长的一段，可以使用单调队列把转移时间复杂度优化到O(1)。时间复杂度O(nmk)。
